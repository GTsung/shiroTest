# 在realm验证过程中会使用ModularRealmAuthenticator类
# 其委托给多个Realm进行验证，验证规则通过AuthenticationStrategy接口指定，默认提供的实现：

# FirstSuccessfulStrategy：
# 只要有一个Realm验证成功即可，只返回第一个Realm身份验证成功的认证信息，其他的忽略；

# AtLeastOneSuccessfulStrategy：
# 只要有一个Realm验证成功即可，和FirstSuccessfulStrategy不同，返回所有Realm身份验证成功的认证信息；

# AllSuccessfulStrategy：
# 所有Realm验证成功才算成功，且返回所有Realm身份验证成功的认证信息，如果有一个失败就失败了。

# ModularRealmAuthenticator默认使用AtLeastOneSuccessfulStrategy策略。

[main]

#指定securityManager的authenticator实现
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator
securityManager.authenticator=$authenticator

#指定securityManager.authenticator的authenticationStrategy
allSuccessfulStrategy=org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy=$allSuccessfulStrategy

# 指定realm
myRealm1=com.home.realm.MyRealm1
myRealm2=com.home.realm.MyRealm2
myRealm3=com.home.realm.MyRealm3

# 只使用这两个realm，其中realm3返回的用户名是一个邮箱
securityManager.realms=$myRealm1,$myRealm2,$myRealm3